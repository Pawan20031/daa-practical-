#include <iostream>
using namespace std;
int max(int a, int b)
{
    if (a > b)
    {
        return a;
    }
    return b;
}
int knapsack(int p[], int wt[], int m, int n)
{
    int arr[n + 1][m + 1];
    for (int i = 0; i < n + 1; i++)
    {
        for (int j = 0; j < m + 1; j++)
        {
            if (i == 0 || j == 0)
            {
                arr[i][j] = 0;
            }
            else if (wt[i] <= j)
            {
                arr[i][j] = max(p[i] + arr[i - 1][j - wt[i]], arr[i - 1][j]);
            }
            else
            {
                arr[i][j] = arr[i - 1][j];
            }
        }
    }
    return arr[n][m];
}
int main()
{
    int maximum_weigth;
    cout << "enter the maximum weigth :";
    cin >> maximum_weigth;

    int n;
    cout << "enter the numbers of ojects :";
    cin >> n;
    int wt[n];
    int p[n];
    cout << "enter the profits of objets :";
    for (int i = 0; i < n; i++)
    {
        cin >> p[i];
    }
    cout << "enter the weigths of objets :";
    for (int i = 0; i < n; i++)
    {
        cin >> wt[i];
    }

    cout << "maximum profit is : " << knapsack(p, wt, maximum_weigth, n);
    return 0;
}
